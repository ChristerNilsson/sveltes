{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Card.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n\t// The best version! Uses style = transform:rotateY\n\t// As <s t y l e> can't handle $progress, style= has to do it.\n\n\timport { tweened } from 'svelte/motion'\n\timport * as easing from 'svelte/easing'\n\n\texport let x\n\texport let y\n\texport let value\n\n\t$: variant = Object.keys(easing)[3] // 0..30 are defined\n\t$: console.log(variant)\n\n\t// const progress = tweened(1,{duration:1000})\n\t$: progress = tweened(1, {duration:2000, easing:easing.elasticInOut})\n\n\tconst click = () => progress.set($progress > 0.5 ? 0 : 1)\n\t$: color = $progress > 0.5 ? 'red' : 'green'\n</script>\n\n<style>\n\t.text {\n \t\tfill : white;\n\t\ttext-anchor : middle;\n\t\talignment-baseline : middle;\n\t\tfont-size : 80px;\n\t}\n</style>\n\n<circle \n\ton:click = {()=>click()}\n\tr = 49\n\tstyle = 'fill:{color}; transform:translate({x}px,{y}px) rotateY({$progress*180}deg)'\n/>\n{#if color=='green'}\n\t<text class='text' \n\t\ton:click = {()=>click()}\n\t\tstyle = 'transform:translate({x}px,{7+y}px) rotateY({$progress*180}deg)'\n\t>{value}</text>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAuBC,KAAK,cAAC,CAAC,AACL,IAAI,CAAG,KAAK,CACb,WAAW,CAAG,MAAM,CACpB,kBAAkB,CAAG,MAAM,CAC3B,SAAS,CAAG,IAAI,AACjB,CAAC"
}