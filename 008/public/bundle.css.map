{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Menu.svelte",
    "..\\src\\Canvas.svelte",
    "..\\src\\Text.svelte",
    "..\\src\\Each.svelte",
    "..\\src\\Grid.svelte",
    "..\\src\\If.svelte",
    "..\\src\\Range.svelte",
    "..\\src\\Scale.svelte",
    "..\\src\\Translate.svelte",
    "..\\src\\Clock.svelte",
    "..\\src\\Rotate.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport {shapeRendering} from './store.js'\r\n\timport range from 'lodash.range'\r\n\timport Menu from './Menu.svelte'\r\n\r\n\timport Canvas from './Canvas.svelte'\r\n\timport Grid from './Grid.svelte'\r\n\timport Rect from './Rect.svelte'\r\n\timport Circle from './Circle.svelte'\r\n\timport Line from './Line.svelte'\r\n\timport Text from './Text.svelte' \r\n\timport Each from './Each.svelte'\r\n\timport If from './If.svelte'\r\n\timport Range from './Range.svelte'\r\n\timport Chess from './Chess.svelte'\r\n\timport Random from './Random.svelte'\r\n\timport Button from './Button.svelte'\r\n\timport Click from './Click.svelte'\r\n\timport Shortcut from './Shortcut.svelte'\r\n\timport ColorPair from './ColorPair.svelte'\r\n\timport Bind from './Bind.svelte'\r\n\timport KeyUp from './KeyUp.svelte'\r\n\timport GuessMyNumber from './GuessMyNumber.svelte'\r\n\timport Translate from './Translate.svelte'\r\n\timport Rotate from './Rotate.svelte'\r\n\timport Scale from './Scale.svelte'\r\n\timport Clock from './Clock.svelte' \r\n\r\n\timport {helpTexts} from './help.js'\r\n\r\n\tconst help=(keyword) => keyword != '' ? window.open('https://github.com/ChristerNilsson/svelte-projects/wiki/'+keyword, '_blank') : 0\r\n\tconst link=(link) => window.open(links[link], '_blank')\r\n\t\r\n\tconst links = {}\r\n\tlinks['Svelte'] = 'https://github.com/ChristerNilsson/svelte-projects/wiki/Svelte'\r\n\tlinks['REPL'] = 'https://svelte.dev/repl/884dce5bfde14f7bb0903684aaac2f80?version=3.15.0'\r\n\t\r\n\tlet selectedTree=''\r\n\tlet hor = 'hor'\r\n\tlet path = [\"\"]\r\n\tconst fs = 'font-size:30px'\r\n\r\n\tconst children0 = 'L1|L2|L3|L4|L5|L6'.split('|')\r\n\t// const keywords = 'bind:|button|circle|$:|each|g|if|line|on:click|on:keyup|random|range|rect|rotate|scale|style|styles|svg|text|translate'.split('|')\r\n\t\r\n\tlet selected0 = 'L1'\r\n\t$: if (selected0=='L1') children1 = 'rect|circle|line'.split('|')\r\n\t$: if (selected0=='L2') children1 = 'each|if|range|chess'.split('|')\r\n\t$: if (selected0=='L3') children1 = 'random|button|shortcut'.split('|')\r\n\t$: if (selected0=='L4') children1 = 'canvas|grid|colorPair'.split('|')\r\n\t$: if (selected0=='L5') children1 = 'bind:|on:keyup|guessMyNumber'.split('|')\r\n\t$: if (selected0=='L6') children1 = 'text|translate|rotate|scale|clock'.split('|')\r\n\r\n\t$: if (selected1=='rect') keywords = 'rect|import|style|stroke|stroke-width|fill|color'.split('|')\r\n\t$: if (selected1=='circle') keywords = 'circle'.split('|')\r\n\t$: if (selected1=='line') keywords = 'line'.split('|')\r\n\t$: if (selected1=='each') keywords = 'each|{}'.split('|')\r\n\t$: if (selected1=='if') keywords = 'if'.split('|')\r\n\t$: if (selected1=='range') keywords = 'range'.split('|')\r\n\t$: if (selected1=='chess') keywords = 'each|if|rect'.split('|')\r\n\t$: if (selected1=='random') keywords = 'random'.split('|')\r\n\t$: if (selected1=='button') keywords = 'button'.split('|')\r\n\t$: if (selected1=='shortcut') keywords = 'button|on:click'.split('|')\r\n\t$: if (selected1=='canvas') keywords = 'svg'.split('|')\r\n\t$: if (selected1=='grid') keywords = 'stroke|fill|each|range|line|slot|class'.split('|')\r\n\t$: if (selected1=='colorPair') keywords = 'on:click|g|each|filter'.split('|')\r\n\t$: if (selected1=='bind:') keywords = 'bind:|input'.split('|')\r\n\t$: if (selected1=='on:keyup') keywords = 'on:keyup|input'.split('|')\r\n\t$: if (selected1=='guessMyNumber') keywords = 'random|on:keyup|input|bind:|import'.split('|')\r\n\t$: if (selected1=='text') keywords = 'text|text-anchor|alignment-baseline'.split('|')\r\n\t$: if (selected1=='translate') keywords = 'translate'.split('|')\r\n\t$: if (selected1=='rotate') keywords = 'rotate'.split('|')\r\n\t$: if (selected1=='scale') keywords = 'scale'.split('|')\r\n\t$: if (selected1=='clock') keywords = 'range|onMount|Date|circle|line|stroke|stroke-width|fill|import|class|g|setInterval|clearInterval|transform|rgb|each|rotate|$:'.split('|')\r\n\t\r\n\t$: help(keyword)\r\n\r\n\t$: if (selected0) selected1 = ''\r\n\t$: if (selected0) keywords = []\r\n\r\n\t$:if (selected3 == 'render:auto') $shapeRendering='auto'\r\n\t\telse if (selected3 == 'render:crisp') $shapeRendering='crispEdges'\r\n\t\telse link(selected3)\r\n\t\r\n\tlet children1 = ['']\r\n\tlet children3 = 'Svelte|REPL|render:auto|render:crisp'.split('|')\r\n\tlet keywords = []\r\n\t\t\r\n\tlet selected1 = ''\r\n\tlet keyword = ''\r\n\tlet selected3 = ''\r\n\r\n</script>\r\n\r\n<style>\r\n\t:global(body) {background-color:#000}\r\n\t.left {float:left}\r\n\t.m {margin:0px}\r\n\t.s8 {width: 67%}\r\n\ttextarea {font-size:20px}\r\n</style>\r\n\r\n<div >\r\n\t<Menu children={children3} bind:selected={selected3}/>\r\n\t<Menu children={children0} bind:selected={selected0}/>\r\n\t<Menu children={children1} bind:selected={selected1}/>\r\n\t<Menu children={keywords} bind:selected={keyword} color='yellow' bgcolor='black'/>\r\n</div>\r\n\r\n<div class='col left s2 m'>\r\n\r\n\t<!-- L1 -->\r\n\t{#if selected1 == 'svg'}<Canvas />{/if}\r\n\t{#if selected1 == 'canvas'}<Canvas />{/if}\r\n\t{#if selected1 == 'grid'}<Grid />{/if}\r\n\t{#if selected1 == 'rect'}<Rect />{/if}\r\n\t{#if selected1 == 'circle'}<Circle />{/if}\r\n\t{#if selected1 == 'line'}<Line />{/if}\r\n\t{#if selected1 == 'text'}<Text />{/if}\r\n\r\n\t<!-- L2 -->\r\n\t{#if selected1 == 'each'}<Each />{/if}\r\n\t{#if selected1 == 'if'}<If />{/if}\r\n\t{#if selected1 == 'range'}<Range />{/if}\r\n\t{#if selected1 == 'chess'}<Chess />{/if}\r\n\r\n\t<!-- L3 -->\r\n\t{#if selected1 == 'random'}<Random />{/if}\r\n\t{#if selected1 == 'button'}<Button />{/if}\r\n\t{#if selected1 == 'on:click'}<Click />{/if}\r\n\t{#if selected1 == 'shortcut'}<Shortcut />{/if}\r\n\r\n\t<!-- L4 -->\r\n\t{#if selected1 == 'colorPair'}<ColorPair />{/if}\r\n\r\n\t<!-- L5 -->\r\n\t{#if selected1 == 'bind:'}<Bind />{/if}\r\n\t{#if selected1 == 'on:keyup'}<KeyUp />{/if}\r\n\t{#if selected1 == 'guessMyNumber'}<GuessMyNumber />{/if}\r\n\r\n\t<!-- L6 -->\r\n\t{#if selected1 == 'translate'}<Translate />{/if}\r\n\t{#if selected1 == 'rotate'}<Rotate />{/if}\r\n\t{#if selected1 == 'scale'}<Scale />{/if}\r\n\t{#if selected1 == 'clock'}<Clock />{/if}\r\n\r\n</div>\r\n\r\n<div class='col left s8 m'>\r\n\t{#if helpTexts[selected0+selected1]}\r\n\t\t<textarea disabled style='width:500px; height:500px;'>{helpTexts[selected0+selected1]}</textarea>\r\n\t{/if}\r\n</div>\r\n\r\n",
    "<script>\r\n\texport let color='black'\r\n\texport let bgcolor='grey'\r\n\texport let children\r\n\texport let selected = children[0]\r\n</script>\r\n\r\n<style>\r\n\t.nav {\r\n\t\tfloat:left;\r\n\t\twidth:100%;\r\n\t\tmargin:1px;\r\n\t\tcursor:default;\r\n\t}\r\n\t.mnu {\r\n\t\tfloat:left;\r\n\t\twidth:auto;\r\n\t\tmargin:0.2%;\r\n\t\tcolor:white;\r\n\t}\r\n\t.text-red {color:red}\r\n\r\n</style>\r\n\r\n<div class='nav' style='background-color:{bgcolor}'>\r\n\t{#each children as c}\r\n\t\t{#if selected==c}\r\n\t\t\t<div class=\"mnu text-red\" on:click = {() => selected=c} >{c}</div>\r\n\t\t{:else}\r\n\t\t\t<div class=\"mnu\" style='color:{color}' on:click = {() => selected=c} >{c}</div>\r\n\t\t{/if}\r\n\t{/each}\r\n</div>",
    "<script>\r\n\timport {shapeRendering} from './store.js'\r\n\texport let click = () => {}\r\n</script>\r\n\r\n<style>\r\n\tsvg {\r\n\t\tfill:#444; \r\n\t\tstroke-width:1; \r\n\t\tstroke:#fff;\r\n\t}\r\n</style>\r\n\r\n<svg class='col left s6' width=200 height=200 style=\"margin:2px 2px 0px\" shape-rendering={$shapeRendering} >\r\n\t<rect width=200 height=200 style='stroke-width:0' on:click={click}/>\r\n\t<slot/>\r\n</svg>\r\n",
    "<script>\r\n\timport Grid from './Grid.svelte'\r\n\timport { onMount } from 'svelte'\r\n\timport CRect from './CRect.svelte'\r\n\timport CText from './CText.svelte'\r\n\tlet angle = 0\r\n</script> \r\n\r\n<style>\r\n\t.fn {fill:none}\r\n\t.red {stroke:\tred}\r\n\t.yellow {stroke:yellow}\r\n\t.f-yellow {fill:yellow}\r\n\t.sw0 {stroke-width:0}\r\n\t.fs40 {font: italic 40px serif}\r\n</style>\r\n\r\n<Grid click={() => angle=angle+10}>\r\n\t<g transform='translate(100,100) rotate({angle})' >\r\n\t\t<g class='fn red'>\r\n\t\t\t<CRect w=144 h=45 />\r\n\t\t</g>\r\n\t\t<g class='sw0 fs40 f-yellow'>\r\n\t\t\t<CText>Grumpy!</CText>\r\n\t\t</g>\r\n\t</g>\r\n</Grid>\r\n",
    "<script>\r\n\timport Grid from './Grid.svelte'\r\n</script>\r\n\r\n<style>\r\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\r\n</style>\r\n\r\n<Grid>\r\n\t{#each [50,100,150] as i}\r\n\t\t<circle cx={i} cy={i} r=10 />\r\n\t{/each}\r\n</Grid>\r\n",
    "<script>\r\n\timport range from 'lodash.range'\r\n\timport Canvas from './Canvas.svelte'\r\n\texport let click = () => {}\r\n</script>\r\n\r\n<style>\r\n  .grid {\r\n\t\tstroke:#ccc; \r\n\t\tfill:#888;\r\n\t}\r\n  * {\r\n\t\tstroke:black;\r\n\t\tfill:white;\r\n\t}\r\n</style>\r\n\r\n<Canvas {click}>\r\n\t{#each range(0,200,20) as i}\r\n    <line x1={i} y1={0} x2={i} y2={200} class=grid />\r\n    <line y1={i} x1={0} y2={i} x2={200} class=grid />\r\n\t{/each}\r\n\t<slot/>\r\n</Canvas>\r\n",
    "<script>\r\n\timport range from 'lodash.range'\r\n\timport Grid from './Grid.svelte'\r\n</script>\r\n\r\n<style>\r\n\trect,circle {\r\n\t\tstroke:yellow;\r\n\t\tstroke-width:1;\r\n\t\tfill:green;\r\n\t}\r\n</style>\r\n\r\n<Grid>\r\n\t{#each range(11) as i}\r\n\t\t{#if i%2==0}\r\n\t\t\t<circle cx={20*i} cy={20*i} r=10 />\r\n\t\t{:else}\r\n\t\t\t<rect x={20*i-10} y={20*i-10} width=20 height=20 />\r\n\t\t{/if}\r\n\t{/each}\r\n</Grid>\r\n",
    "<script>\r\n\timport Grid from './Grid.svelte'\r\n\timport range from 'lodash.range'\r\n</script>\r\n\r\n<style>\r\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\r\n</style>\r\n\r\n<Grid>\r\n\t{#each range(11) as i}\r\n\t\t<circle cx={20*i} cy={20*i} r={2*i} />\r\n\t{/each}\r\n</Grid>\r\n",
    "<style>\r\n\tsvg {\r\n\t\twidth: 200px;\r\n\t\theight: 200px;\r\n\t}\r\n\tline {stroke-width:2}\r\n</style>\r\n\r\n<svg viewBox='-100 -100 200 200'>\r\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\r\n\t<line y1=0 y2=90 style='stroke:black'/>\r\n\t<line y1=0 y2=90 style='stroke:red' transform=\"rotate(90) scale(0.5)\"/>\r\n</svg>\r\n",
    "<style>\r\n\tsvg {\r\n\t\twidth: 200px;\r\n\t\theight: 200px;\r\n\t}\r\n\tline {stroke-width:2}\r\n</style>\r\n\r\n<svg viewBox='-100 -100 200 200'>\r\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\r\n\t<line y1=0 y2=90 style='stroke:black'/>\r\n\t<line y1=0 y2=90 style='stroke:red' transform=\"translate(20)\"/>\r\n</svg>\r\n",
    "<script>\r\n\timport range from 'lodash.range'\r\n\timport { onMount } from 'svelte'\r\n\timport CText from './CText.svelte'\r\n\r\n\tlet time = new Date()\r\n\r\n\t$: hours = time.getHours()\r\n\t$: minutes = time.getMinutes()\r\n\t$: seconds = time.getSeconds()\r\n\r\n\tonMount(() => {\r\n\t\tconst interval = setInterval(() => {time = new Date()}, 1000)\r\n\t\treturn () => clearInterval(interval)\r\n\t})\r\n</script>\r\n\r\n<style>\r\n\tsvg { width: 100%; height: 100%; }\r\n\t.clock-face { stroke: #333; fill: white; }\r\n\t.minor { stroke: #999; stroke-width: 0.5; }\r\n\t.major { stroke: #333; stroke-width: 1; }\r\n\t.hour { stroke: #333; }\r\n\t.minute { stroke: #666; }\r\n\t.second, .second-counterweight { stroke: rgb(180,0,0); }\r\n\t.second-counterweight { stroke-width: 3; }\r\n\t.fs {font-size:0.5em}\r\n</style>\r\n\r\n<svg viewBox='-50 -50 100 100'>\r\n\t<circle class='clock-face' r='48'/>\r\n\r\n\t<!-- markers -->\r\n\t{#each range(12) as i}\r\n\t\t<g transform = 'rotate({30 * i})'>\r\n\t\t\t<line class='major' y1=35 y2=45 />\r\n\t\t\t<g transform='translate({30}) rotate({-30*i})' class='fs' >\r\n\t\t\t\t<CText>{1+(i+2)%12}</CText>\r\n\t\t\t</g>\r\n\r\n\t\t\t{#each range(1,5) as offset}\r\n\t\t\t\t<line class='minor' y1=42 y2=45 transform='rotate({6 * offset})' />\r\n\t\t\t{/each}\r\n\t\t</g>\r\n\t{/each}\r\n\r\n\t<!-- hands -->\r\n\t<line class='hour' y1=2 y2=-20 transform='rotate({30 * hours + minutes / 2})' />\r\n\t<line class='minute' y1=4 y2=-30 transform='rotate({6 * minutes + seconds / 10})' />\r\n\t<g transform='rotate({6 * seconds})'>\r\n\t\t<line class='second' y1=10 y2=-38/>\r\n\t\t<line class='second-counterweight' y1=10 y2=2/>\r\n\t</g>\r\n</svg>",
    "<style>\r\n\tsvg {\r\n\t\twidth: 200px;\r\n\t\theight: 200px;\r\n\t}\r\n\tline {stroke-width:2}\r\n</style>\r\n\r\n<svg viewBox='-100 -100 200 200'>\r\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\r\n\t<line y2=90 style='stroke:black'/>\r\n\t<line y2=90 style='stroke:red' transform=\"rotate(45)\"/>\r\n</svg>\r\n"
  ],
  "names": [],
  "mappings": "AA+FS,IAAI,AAAE,CAAC,iBAAiB,IAAI,CAAC,AACrC,KAAK,cAAC,CAAC,MAAM,IAAI,CAAC,AAClB,EAAE,cAAC,CAAC,OAAO,GAAG,CAAC,AACf,GAAG,cAAC,CAAC,KAAK,CAAE,GAAG,CAAC,AAChB,QAAQ,cAAC,CAAC,UAAU,IAAI,CAAC;AC3FzB,IAAI,cAAC,CAAC,AACL,MAAM,IAAI,CACV,MAAM,IAAI,CACV,OAAO,GAAG,CACV,OAAO,OAAO,AACf,CAAC,AACD,IAAI,cAAC,CAAC,AACL,MAAM,IAAI,CACV,MAAM,IAAI,CACV,OAAO,IAAI,CACX,MAAM,KAAK,AACZ,CAAC,AACD,SAAS,cAAC,CAAC,MAAM,GAAG,CAAC;ACdrB,GAAG,cAAC,CAAC,AACJ,KAAK,IAAI,CACT,aAAa,CAAC,CACd,OAAO,IAAI,AACZ,CAAC;ACDD,GAAG,eAAC,CAAC,KAAK,IAAI,CAAC,AACf,IAAI,eAAC,CAAC,MAAM,CAAE,GAAG,CAAC,AAClB,OAAO,eAAC,CAAC,OAAO,MAAM,CAAC,AACvB,SAAS,eAAC,CAAC,KAAK,MAAM,CAAC,AACvB,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC,AACrB,KAAK,eAAC,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;ACT/B,MAAM,eAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACEjD,KAAK,eAAC,CAAC,AACP,OAAO,IAAI,CACX,KAAK,IAAI,AACV,CAAC,AACA,eAAE,CAAC,AACH,OAAO,KAAK,CACZ,KAAK,KAAK,AACX,CAAC;ACRD,mBAAI,CAAC,MAAM,eAAC,CAAC,AACZ,OAAO,MAAM,CACb,aAAa,CAAC,CACd,KAAK,KAAK,AACX,CAAC;ACJD,MAAM,eAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACLlD,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC;ACJrB,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC;ACarB,GAAG,eAAC,CAAC,AAAC,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,AAAE,CAAC,AAClC,WAAW,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,IAAI,CAAE,KAAK,AAAE,CAAC,AAC1C,MAAM,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAG,AAAE,CAAC,AAC3C,MAAM,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,CAAC,AAAE,CAAC,AACzC,KAAK,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,AAAE,CAAC,AACvB,OAAO,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,AAAE,CAAC,AACzB,sBAAO,CAAE,qBAAqB,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AACxD,qBAAqB,eAAC,CAAC,AAAC,YAAY,CAAE,CAAC,AAAE,CAAC,AAC1C,GAAG,eAAC,CAAC,UAAU,KAAK,CAAC;ACzBrB,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC"
}