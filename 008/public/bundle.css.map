{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Canvas.svelte",
    "../Menu.svelte",
    "../Grid.svelte",
    "../Text.svelte",
    "../Each.svelte",
    "../If.svelte",
    "../Range.svelte",
    "../Translate.svelte",
    "../Rotate.svelte",
    "../Scale.svelte",
    "../Clock.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport {shapeRendering} from './store.js'\n\timport range from 'lodash.range'\n\timport Menu from './Menu.svelte'\n\n\timport Canvas from './Canvas.svelte'\n\timport Grid from './Grid.svelte'\n\timport Rect from './Rect.svelte'\n\timport Circle from './Circle.svelte'\n\timport Line from './Line.svelte'\n\timport Text from './Text.svelte' \n\timport Each from './Each.svelte'\n\timport If from './If.svelte'\n\timport Range from './Range.svelte'\n\timport Chess from './Chess.svelte'\n\timport Random from './Random.svelte'\n\timport Button from './Button.svelte'\n\timport Click from './Click.svelte'\n\timport Shortcut from './Shortcut.svelte'\n\timport ColorPair from './ColorPair.svelte'\n\timport Bind from './Bind.svelte'\n\timport KeyUp from './KeyUp.svelte'\n\timport GuessMyNumber from './GuessMyNumber.svelte'\n\timport Translate from './Translate.svelte'\n\timport Rotate from './Rotate.svelte'\n\timport Scale from './Scale.svelte'\n\timport Clock from './Clock.svelte' \n\n\timport {helpTexts} from './help.js'\n\n\tconst help=(keyword) => keyword != '' ? window.open('https://github.com/ChristerNilsson/svelte-projects/wiki/'+keyword, '_blank') : 0\n\tconst link=(link) => window.open(links[link], '_blank')\n\t\n\tconst links = {}\n\tlinks['Svelte'] = 'https://github.com/ChristerNilsson/svelte-projects/wiki/Svelte'\n\tlinks['REPL'] = 'https://svelte.dev/repl/884dce5bfde14f7bb0903684aaac2f80?version=3.15.0'\n\t\n\tlet selectedTree=''\n\tlet hor = 'hor'\n\tlet path = [\"\"]\n\tconst fs = 'font-size:30px'\n\n\tconst children0 = 'L1|L2|L3|L4|L5|L6'.split('|')\n\t// const keywords = 'bind:|button|circle|$:|each|g|if|line|on:click|on:keyup|random|range|rect|rotate|scale|style|styles|svg|text|translate'.split('|')\n\t\n\tlet selected0 = 'L1'\n\t$: if (selected0=='L1') children1 = 'rect|circle|line'.split('|')\n\t$: if (selected0=='L2') children1 = 'each|if|range|chess'.split('|')\n\t$: if (selected0=='L3') children1 = 'random|button|shortcut'.split('|')\n\t$: if (selected0=='L4') children1 = 'canvas|grid|colorPair'.split('|')\n\t$: if (selected0=='L5') children1 = 'bind:|on:keyup|guessMyNumber'.split('|')\n\t$: if (selected0=='L6') children1 = 'text|translate|rotate|scale|clock'.split('|')\n\n\t$: if (selected1=='rect') keywords = 'rect|import|style|stroke|stroke-width|fill|color'.split('|')\n\t$: if (selected1=='circle') keywords = 'circle'.split('|')\n\t$: if (selected1=='line') keywords = 'line'.split('|')\n\t$: if (selected1=='each') keywords = 'each|{}'.split('|')\n\t$: if (selected1=='if') keywords = 'if'.split('|')\n\t$: if (selected1=='range') keywords = 'range'.split('|')\n\t$: if (selected1=='chess') keywords = 'each|if|rect'.split('|')\n\t$: if (selected1=='random') keywords = 'random'.split('|')\n\t$: if (selected1=='button') keywords = 'button'.split('|')\n\t$: if (selected1=='shortcut') keywords = 'button|on:click'.split('|')\n\t$: if (selected1=='canvas') keywords = 'svg'.split('|')\n\t$: if (selected1=='grid') keywords = 'stroke|fill|each|range|line|slot|class'.split('|')\n\t$: if (selected1=='colorPair') keywords = 'on:click|g|each|filter'.split('|')\n\t$: if (selected1=='bind:') keywords = 'bind:|input'.split('|')\n\t$: if (selected1=='on:keyup') keywords = 'on:keyup|input'.split('|')\n\t$: if (selected1=='guessMyNumber') keywords = 'random|on:keyup|input|bind:|import'.split('|')\n\t$: if (selected1=='text') keywords = 'text|text-anchor|alignment-baseline'.split('|')\n\t$: if (selected1=='translate') keywords = 'translate'.split('|')\n\t$: if (selected1=='rotate') keywords = 'rotate'.split('|')\n\t$: if (selected1=='scale') keywords = 'scale'.split('|')\n\t$: if (selected1=='clock') keywords = 'range|onMount|Date|circle|line|stroke|stroke-width|fill|import|class|g|setInterval|clearInterval|transform|rgb|each|rotate|$:'.split('|')\n\t\n\t$: help(keyword)\n\n\t$: if (selected0) selected1 = ''\n\t$: if (selected0) keywords = []\n\n\t$:if (selected3 == 'render:auto') $shapeRendering='auto'\n\t\telse if (selected3 == 'render:crisp') $shapeRendering='crispEdges'\n\t\telse link(selected3)\n\t\n\tlet children1 = ['']\n\tlet children3 = 'Svelte|REPL|render:auto|render:crisp'.split('|')\n\tlet keywords = []\n\t\t\n\tlet selected1 = ''\n\tlet keyword = ''\n\tlet selected3 = ''\n\n</script>\n\n<style>\n\t:global(body) {background-color:#000}\n\t.left {float:left}\n\t.m {margin:0px}\n\t.s8 {width: 67%}\n\ttextarea {font-size:20px}\n</style>\n\n<div >\n\t<Menu children={children3} bind:selected={selected3}/>\n\t<Menu children={children0} bind:selected={selected0}/>\n\t<Menu children={children1} bind:selected={selected1}/>\n\t<Menu children={keywords} bind:selected={keyword} color='yellow' bgcolor='black'/>\n</div>\n\n<div class='col left s2 m'>\n\n\t<!-- L1 -->\n\t{#if selected1 == 'svg'}<Canvas />{/if}\n\t{#if selected1 == 'canvas'}<Canvas />{/if}\n\t{#if selected1 == 'grid'}<Grid />{/if}\n\t{#if selected1 == 'rect'}<Rect />{/if}\n\t{#if selected1 == 'circle'}<Circle />{/if}\n\t{#if selected1 == 'line'}<Line />{/if}\n\t{#if selected1 == 'text'}<Text />{/if}\n\n\t<!-- L2 -->\n\t{#if selected1 == 'each'}<Each />{/if}\n\t{#if selected1 == 'if'}<If />{/if}\n\t{#if selected1 == 'range'}<Range />{/if}\n\t{#if selected1 == 'chess'}<Chess />{/if}\n\n\t<!-- L3 -->\n\t{#if selected1 == 'random'}<Random />{/if}\n\t{#if selected1 == 'button'}<Button />{/if}\n\t{#if selected1 == 'on:click'}<Click />{/if}\n\t{#if selected1 == 'shortcut'}<Shortcut />{/if}\n\n\t<!-- L4 -->\n\t{#if selected1 == 'colorPair'}<ColorPair />{/if}\n\n\t<!-- L5 -->\n\t{#if selected1 == 'bind:'}<Bind />{/if}\n\t{#if selected1 == 'on:keyup'}<KeyUp />{/if}\n\t{#if selected1 == 'guessMyNumber'}<GuessMyNumber />{/if}\n\n\t<!-- L6 -->\n\t{#if selected1 == 'translate'}<Translate />{/if}\n\t{#if selected1 == 'rotate'}<Rotate />{/if}\n\t{#if selected1 == 'scale'}<Scale />{/if}\n\t{#if selected1 == 'clock'}<Clock />{/if}\n\n</div>\n\n<div class='col left s8 m'>\n\t{#if helpTexts[selected0+selected1]}\n\t\t<textarea disabled style='width:500px; height:500px;'>{helpTexts[selected0+selected1]}</textarea>\n\t{/if}\n</div>\n\n",
    "<script>\n\timport {shapeRendering} from './store.js'\n\texport let click = () => {}\n</script>\n\n<style>\n\tsvg {\n\t\tfill:#444; \n\t\tstroke-width:1; \n\t\tstroke:#fff;\n\t}\n</style>\n\n<svg class='col left s6' width=200 height=200 style=\"margin:2px 2px 0px\" shape-rendering={$shapeRendering} >\n\t<rect width=200 height=200 style='stroke-width:0' on:click={click}/>\n\t<slot/>\n</svg>\n",
    "<script>\n\texport let color='black'\n\texport let bgcolor='grey'\n\texport let children\n\texport let selected = children[0]\n</script>\n\n<style>\n\t.nav {\n\t\tfloat:left;\n\t\twidth:100%;\n\t\tmargin:1px;\n\t\tcursor:default;\n\t}\n\t.mnu {\n\t\tfloat:left;\n\t\twidth:auto;\n\t\tmargin:0.2%;\n\t\tcolor:white;\n\t}\n\t.text-red {color:red}\n\n</style>\n\n<div class='nav' style='background-color:{bgcolor}'>\n\t{#each children as c}\n\t\t{#if selected==c}\n\t\t\t<div class=\"mnu text-red\" on:click = {() => selected=c} >{c}</div>\n\t\t{:else}\n\t\t\t<div class=\"mnu\" style='color:{color}' on:click = {() => selected=c} >{c}</div>\n\t\t{/if}\n\t{/each}\n</div>",
    "<script>\n\timport range from 'lodash.range'\n\timport Canvas from './Canvas.svelte'\n\texport let click = () => {}\n</script>\n\n<style>\n  .grid {\n\t\tstroke:#ccc; \n\t\tfill:#888;\n\t}\n  * {\n\t\tstroke:black;\n\t\tfill:white;\n\t}\n</style>\n\n<Canvas {click}>\n\t{#each range(0,200,20) as i}\n    <line x1={i} y1={0} x2={i} y2={200} class=grid />\n    <line y1={i} x1={0} y2={i} x2={200} class=grid />\n\t{/each}\n\t<slot/>\n</Canvas>\n",
    "<script>\n\timport Grid from './Grid.svelte'\n\timport { onMount } from 'svelte'\n\timport CRect from './CRect.svelte'\n\timport CText from './CText.svelte'\n\tlet angle = 0\n</script> \n\n<style>\n\t.fn {fill:none}\n\t.red {stroke:\tred}\n\t.yellow {stroke:yellow}\n\t.f-yellow {fill:yellow}\n\t.sw0 {stroke-width:0}\n\t.fs40 {font: italic 40px serif}\n</style>\n\n<Grid click={() => angle=angle+10}>\n\t<g transform='translate(100,100) rotate({angle})' >\n\t\t<g class='fn red'>\n\t\t\t<CRect w=144 h=45 />\n\t\t</g>\n\t\t<g class='sw0 fs40 f-yellow'>\n\t\t\t<CText>Grumpy!</CText>\n\t\t</g>\n\t</g>\n</Grid>\n",
    "<script>\n\timport Grid from './Grid.svelte'\n</script>\n\n<style>\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\n</style>\n\n<Grid>\n\t{#each [50,100,150] as i}\n\t\t<circle cx={i} cy={i} r=10 />\n\t{/each}\n</Grid>\n",
    "<script>\n\timport range from 'lodash.range'\n\timport Grid from './Grid.svelte'\n</script>\n\n<style>\n\trect,circle {\n\t\tstroke:yellow;\n\t\tstroke-width:1;\n\t\tfill:green;\n\t}\n</style>\n\n<Grid>\n\t{#each range(11) as i}\n\t\t{#if i%2==0}\n\t\t\t<circle cx={20*i} cy={20*i} r=10 />\n\t\t{:else}\n\t\t\t<rect x={20*i-10} y={20*i-10} width=20 height=20 />\n\t\t{/if}\n\t{/each}\n</Grid>\n",
    "<script>\n\timport Grid from './Grid.svelte'\n\timport range from 'lodash.range'\n</script>\n\n<style>\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\n</style>\n\n<Grid>\n\t{#each range(11) as i}\n\t\t<circle cx={20*i} cy={20*i} r={2*i} />\n\t{/each}\n</Grid>\n",
    "<style>\n\tsvg {\n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n\tline {stroke-width:2}\n</style>\n\n<svg viewBox='-100 -100 200 200'>\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\n\t<line y1=0 y2=90 style='stroke:black'/>\n\t<line y1=0 y2=90 style='stroke:red' transform=\"translate(20)\"/>\n</svg>\n",
    "<style>\n\tsvg {\n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n\tline {stroke-width:2}\n</style>\n\n<svg viewBox='-100 -100 200 200'>\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\n\t<line y2=90 style='stroke:black'/>\n\t<line y2=90 style='stroke:red' transform=\"rotate(45)\"/>\n</svg>\n",
    "<style>\n\tsvg {\n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n\tline {stroke-width:2}\n</style>\n\n<svg viewBox='-100 -100 200 200'>\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\n\t<line y1=0 y2=90 style='stroke:black'/>\n\t<line y1=0 y2=90 style='stroke:red' transform=\"rotate(90) scale(0.5)\"/>\n</svg>\n",
    "<script>\n\timport range from 'lodash.range'\n\timport { onMount } from 'svelte'\n\timport CText from './CText.svelte'\n\n\tlet time = new Date()\n\n\t$: hours = time.getHours()\n\t$: minutes = time.getMinutes()\n\t$: seconds = time.getSeconds()\n\n\tonMount(() => {\n\t\tconst interval = setInterval(() => {time = new Date()}, 1000)\n\t\treturn () => clearInterval(interval)\n\t})\n</script>\n\n<style>\n\tsvg { width: 100%; height: 100%; }\n\t.clock-face { stroke: #333; fill: white; }\n\t.minor { stroke: #999; stroke-width: 0.5; }\n\t.major { stroke: #333; stroke-width: 1; }\n\t.hour { stroke: #333; }\n\t.minute { stroke: #666; }\n\t.second, .second-counterweight { stroke: rgb(180,0,0); }\n\t.second-counterweight { stroke-width: 3; }\n\t.fs {font-size:0.5em}\n</style>\n\n<svg viewBox='-50 -50 100 100'>\n\t<circle class='clock-face' r='48'/>\n\n\t<!-- markers -->\n\t{#each range(12) as i}\n\t\t<g transform = 'rotate({30 * i})'>\n\t\t\t<line class='major' y1=35 y2=45 />\n\t\t\t<g transform='translate({30}) rotate({-30*i})' class='fs' >\n\t\t\t\t<CText>{1+(i+2)%12}</CText>\n\t\t\t</g>\n\n\t\t\t{#each range(1,5) as offset}\n\t\t\t\t<line class='minor' y1=42 y2=45 transform='rotate({6 * offset})' />\n\t\t\t{/each}\n\t\t</g>\n\t{/each}\n\n\t<!-- hands -->\n\t<line class='hour' y1=2 y2=-20 transform='rotate({30 * hours + minutes / 2})' />\n\t<line class='minute' y1=4 y2=-30 transform='rotate({6 * minutes + seconds / 10})' />\n\t<g transform='rotate({6 * seconds})'>\n\t\t<line class='second' y1=10 y2=-38/>\n\t\t<line class='second-counterweight' y1=10 y2=2/>\n\t</g>\n</svg>"
  ],
  "names": [],
  "mappings": "AA+FS,IAAI,AAAE,CAAC,iBAAiB,IAAI,CAAC,AACrC,KAAK,eAAC,CAAC,MAAM,IAAI,CAAC,AAClB,EAAE,eAAC,CAAC,OAAO,GAAG,CAAC,AACf,GAAG,eAAC,CAAC,KAAK,CAAE,GAAG,CAAC,AAChB,QAAQ,eAAC,CAAC,UAAU,IAAI,CAAC;AC7FzB,GAAG,eAAC,CAAC,AACJ,KAAK,IAAI,CACT,aAAa,CAAC,CACd,OAAO,IAAI,AACZ,CAAC;ACFD,IAAI,cAAC,CAAC,AACL,MAAM,IAAI,CACV,MAAM,IAAI,CACV,OAAO,GAAG,CACV,OAAO,OAAO,AACf,CAAC,AACD,IAAI,cAAC,CAAC,AACL,MAAM,IAAI,CACV,MAAM,IAAI,CACV,OAAO,IAAI,CACX,MAAM,KAAK,AACZ,CAAC,AACD,SAAS,cAAC,CAAC,MAAM,GAAG,CAAC;ACbpB,KAAK,eAAC,CAAC,AACP,OAAO,IAAI,CACX,KAAK,IAAI,AACV,CAAC,AACA,eAAE,CAAC,AACH,OAAO,KAAK,CACZ,KAAK,KAAK,AACX,CAAC;ACLD,GAAG,cAAC,CAAC,KAAK,IAAI,CAAC,AACf,IAAI,cAAC,CAAC,MAAM,CAAE,GAAG,CAAC,AAElB,SAAS,cAAC,CAAC,KAAK,MAAM,CAAC,AACvB,IAAI,cAAC,CAAC,aAAa,CAAC,CAAC,AACrB,KAAK,cAAC,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;ACT/B,MAAM,cAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACClD,mBAAI,CAAC,MAAM,eAAC,CAAC,AACZ,OAAO,MAAM,CACb,aAAa,CAAC,CACd,KAAK,KAAK,AACX,CAAC;ACJD,MAAM,cAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACLlD,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,cAAC,CAAC,aAAa,CAAC,CAAC;ACJrB,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,cAAC,CAAC,aAAa,CAAC,CAAC;ACJrB,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,cAAC,CAAC,aAAa,CAAC,CAAC;ACarB,GAAG,eAAC,CAAC,AAAC,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,AAAE,CAAC,AAClC,WAAW,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,IAAI,CAAE,KAAK,AAAE,CAAC,AAC1C,MAAM,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAG,AAAE,CAAC,AAC3C,MAAM,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,CAAC,AAAE,CAAC,AACzC,KAAK,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,AAAE,CAAC,AACvB,OAAO,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,AAAE,CAAC,AACzB,sBAAO,CAAE,qBAAqB,eAAC,CAAC,AAAC,MAAM,CAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AACxD,qBAAqB,eAAC,CAAC,AAAC,YAAY,CAAE,CAAC,AAAE,CAAC,AAC1C,GAAG,eAAC,CAAC,UAAU,KAAK,CAAC"
}